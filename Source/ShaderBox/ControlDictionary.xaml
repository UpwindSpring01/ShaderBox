<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:local="clr-namespace:ShaderLibrary" 
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:System="clr-namespace:System;assembly=mscorlib" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
                    >
    <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="#FF070B0F"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Background="#FF181818">
                        <ContentPresenter Content="{Binding}" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListviewWithEmpty" TargetType="{x:Type ListView}" BasedOn="{StaticResource {x:Type ListView}}">
        <Style.Triggers>
            <Trigger Property="HasItems" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListView}">
                            <ListView>
                                <System:String>No errors</System:String>
                            </ListView>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Window}" x:Key="ModernDialogStyle">
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowText}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorder}" />
        <Setter Property="Width" Value="480" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border x:Name="WindowBorder" Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}">
                        <Border.Resources>
                            <Storyboard x:Key="BackgroundAnimation">
                                <ColorAnimation Storyboard.TargetName="WindowBorderBackground" Storyboard.TargetProperty="Color" To="{DynamicResource WindowBackgroundColor}" Duration="0:0:.6" />
                            </Storyboard>
                        </Border.Resources>

                        <Border.Background>
                            <SolidColorBrush x:Name="WindowBorderBackground" Color="{DynamicResource WindowBackgroundColor}" />
                        </Border.Background>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <AdornerDecorator>
                                <Grid x:Name="LayoutRoot">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <!--<RowDefinition Height="*" />-->
                                    </Grid.RowDefinitions>
                                    <Grid Background="#FF191919">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <!-- title -->
                                        <TextBlock Text="{TemplateBinding Title}" Margin="8,0" VerticalAlignment="Center" Style="{StaticResource ModernWindowTitle}"/>

                                        <!-- window system buttons-->
                                        <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Button ToolTip="Close" Style="{StaticResource SystemCloseButton}" >

                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <ei:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" MethodName="Close"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Grid Width="13" Height="12" RenderTransform="1,0,0,1,0,1">
                                                    <Path Data="M0,0 L8,7 M8,0 L0,7 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                              Stroke="{TemplateBinding Foreground}" StrokeThickness="1.5"  />
                                                </Grid>
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                    <!-- window background content -->
                                    <ContentPresenter Grid.Row="1" />

                                    <!-- resize grip -->
                                    <!--<Grid Grid.Row="2" x:Name="ResizeGrip" Background="Transparent" Visibility="Visible" HorizontalAlignment="Right" VerticalAlignment="Bottom" WindowChrome.ResizeGripDirection="BottomRight">
                                        <Path Width="12" Height="12" Margin="1" 
                                              Stroke="{DynamicResource WindowText}"
                                              StrokeThickness="1"
                                              Stretch="None"
                                              Data="F1 M1,10 L3,10 M5,10 L7,10 M9,10 L11,10 M2,9 L2,11 M6,9 L6,11 M10,9 L10,11 M5,6 L7,6 M9,6 L11,6 M6,5 L6,7 M10,5 L10,7 M9,2 L11,2 M10,1 L10,3" />
                                    </Grid>-->
                                </Grid>
                            </AdornerDecorator>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0" GlassFrameThickness="1" UseAeroCaptionButtons="False" NonClientFrameEdges="None" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxWrapStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource ListBoxStyle}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel IsItemsHost="True" d:DesignUseLayoutRounding="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource ListBoxItemStyle}" TargetType="ListBoxItem">
                    <Setter Property="Padding" Value="5,5" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="DropDownImage" >
        <DockPanel Height="200" Width="400">
            <Image Source="{Binding Image}" Width="250" Height="200" Stretch="Uniform" />
            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" TextWrapping="Wrap"/>
            <TextBlock Text=" [Built-in]" VerticalAlignment="Center" TextWrapping="Wrap" Visibility="{Binding IsBuiltIn, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </StackPanel>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="DropDownSelectedImage">
        <DockPanel Height="100">
            <Image Source="{Binding Image}" Width="150" Height="100" Stretch="Uniform" />
            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                <TextBlock Text="{Binding Name}" VerticalAlignment="Center" TextWrapping="Wrap"/>
                <TextBlock Text="[Built-in]" VerticalAlignment="Center" TextWrapping="Wrap" Visibility="{Binding IsBuiltIn, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </StackPanel>
        </DockPanel>
    </DataTemplate>
</ResourceDictionary>